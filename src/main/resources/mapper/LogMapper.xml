<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fcfz.oa.mapper.LogMapper">
    <resultMap id="BaseResultMap" type="com.fcfz.oa.entity.Log">
        <id column="log_id" property="logId" jdbcType="INTEGER"/>
        <result column="log_title" property="logTitle" jdbcType="VARCHAR"/>
        <result column="log_uploadFilePath" property="logUploadfilepath" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="log_content" property="logContent" jdbcType="VARCHAR"/>
        <result column="log_time" property="logTime" jdbcType="TIMESTAMP"/>
        <result column="log_receiver" property="logReceiver" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        log_id, log_title, log_uploadFilePath, user_id, role_id, log_content, log_time, log_receiver
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fcfz.oa.entity.LogExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from log
        where log_id = #{logId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from log
        where log_id = #{logId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.fcfz.oa.entity.LogExample">
        delete from log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fcfz.oa.entity.Log">
        insert into log (log_id, log_title, log_uploadFilePath,
                         user_id, role_id, log_content,
                         log_time, log_receiver)
        values (#{logId,jdbcType=INTEGER}, #{logTitle,jdbcType=VARCHAR}, #{logUploadfilepath,jdbcType=VARCHAR},
                #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{logContent,jdbcType=VARCHAR},
                #{logTime,jdbcType=TIMESTAMP}, #{logReceiver,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.fcfz.oa.entity.Log">
        insert into log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                log_id,
            </if>
            <if test="logTitle != null">
                log_title,
            </if>
            <if test="logUploadfilepath != null">
                log_uploadFilePath,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="logContent != null">
                log_content,
            </if>
            <if test="logTime != null">
                log_time,
            </if>
            <if test="logReceiver != null">
                log_receiver,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                #{logId,jdbcType=INTEGER},
            </if>
            <if test="logTitle != null">
                #{logTitle,jdbcType=VARCHAR},
            </if>
            <if test="logUploadfilepath != null">
                #{logUploadfilepath,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="logContent != null">
                #{logContent,jdbcType=VARCHAR},
            </if>
            <if test="logTime != null">
                #{logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logReceiver != null">
                #{logReceiver,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fcfz.oa.entity.LogExample" resultType="java.lang.Integer">
        select count(*) from log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <select id="selectAllLogByUserId" resultType="com.fcfz.oa.entity.Log">
        select *
        from log
        where user_id = #{用户id};
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update log
        <set>
            <if test="record.logId != null">
                log_id = #{record.logId,jdbcType=INTEGER},
            </if>
            <if test="record.logTitle != null">
                log_title = #{record.logTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.logUploadfilepath != null">
                log_uploadFilePath = #{record.logUploadfilepath,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.logContent != null">
                log_content = #{record.logContent,jdbcType=VARCHAR},
            </if>
            <if test="record.logTime != null">
                log_time = #{record.logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.logReceiver != null">
                log_receiver = #{record.logReceiver,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update log
        set log_id = #{record.logId,jdbcType=INTEGER},
        log_title = #{record.logTitle,jdbcType=VARCHAR},
        log_uploadFilePath = #{record.logUploadfilepath,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        role_id = #{record.roleId,jdbcType=INTEGER},
        log_content = #{record.logContent,jdbcType=VARCHAR},
        log_time = #{record.logTime,jdbcType=TIMESTAMP},
        log_receiver = #{record.logReceiver,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fcfz.oa.entity.Log">
        update log
        <set>
            <if test="logTitle != null">
                log_title = #{logTitle,jdbcType=VARCHAR},
            </if>
            <if test="logUploadfilepath != null">
                log_uploadFilePath = #{logUploadfilepath,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="logContent != null">
                log_content = #{logContent,jdbcType=VARCHAR},
            </if>
            <if test="logTime != null">
                log_time = #{logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="logReceiver != null">
                log_receiver = #{logReceiver,jdbcType=VARCHAR},
            </if>
        </set>
        where log_id = #{logId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fcfz.oa.entity.Log">
        update log
        set log_title          = #{logTitle,jdbcType=VARCHAR},
            log_uploadFilePath = #{logUploadfilepath,jdbcType=VARCHAR},
            user_id            = #{userId,jdbcType=INTEGER},
            role_id            = #{roleId,jdbcType=INTEGER},
            log_content        = #{logContent,jdbcType=VARCHAR},
            log_time           = #{logTime,jdbcType=TIMESTAMP},
            log_receiver       = #{logReceiver,jdbcType=VARCHAR}
        where log_id = #{logId,jdbcType=INTEGER}
    </update>
</mapper>